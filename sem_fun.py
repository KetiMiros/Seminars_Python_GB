#  функция sorted
# lst = [ 1,2,5,4,555,2,45,26,2,99,45]
# str = "abfdyeq"

# в словаре вернет отсортированную последовательность ключей
# print(sorted(str))
# ===========================================================================



# функция zip
# возвращает итератор с кортежами, например, 10-й кортеж будет содержать
# 10-элемент каждой из переданных последовательностей

# --------------вернет 6 кортежей---------------------
lst1 = [1,25,265,23,52,485]
lst2 = [20,25,2,145,22,47]
list(zip(lst1,lst2))
print(list(zip(lst1,lst2)))

# =============вернет 5 кортежей, по длине самой корткой последовательности===============
lst_a = [1,2,3,4,5]
lst_b = [5,6,8,79,97,4]
lst_c = [4,2,2,15,12,4,21,4]
all_lst = list(zip(lst_a,lst_b,lst_c))
print(all_lst)

# ----------------создание словар япри помощи функции zip----------------------
user_key = ['name', 'family', 'age', 'hobbi']
user_value = ['Ivan', 'Pobatov', 25, 'developer']
user_id = list(zip(user_key,user_value))
print(dict(user_id))                             #переводим в словарь(dict)

# ---------------------Фунция map---------------------------------
# применяет функцию к каждому элементу последовательности и возвращает итератор с результатами
# например, можно выполнить преобразование элементов. Перевести все строки в верхний регистр или
# конвертировать в число

lst_word = ['baghags', 'jkfkag','Hghsjajb']
print(list(map(str.upper,lst_word)))                      #map метод последовательностей,поэтому переводим в list

print([word.upper() for word in lst_word]) # list comprehension
# или
lst_str = ['1', '35', '456']
print(list(map(int, lst_str)))
# или
print([int(i) for i in lst_str])                #list comprehension